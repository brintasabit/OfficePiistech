@model ContentHtmlTest.Models.Employee

@{
    Layout = null;
}
    <meta name="viewport" content="width=device-width" />
    <title>AddOrEdit</title>


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    

        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Employee</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)
        @Html.HiddenFor(model => model.ImagePath)
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Created_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Created_Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Created_Date, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="saveProfile" type="submit" value="Submit" class="btn btn-default" />
                    @if (Model.EmployeeId != 0)
                    {
                        <a class="btn btn-success" id="saveProfile" onclick="refreshAddNewTab('@Url.Action("AddOrEdit","Home",new {id=0})', false)"><i class="fa-fade"></i>Add New</a>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    <img src="@Url.Content(Model.ImagePath)" style="margin: 50px" height="200" width="200" id="imagePreview" />
                    <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                </div>
            </div>
        </div>
    </div>

